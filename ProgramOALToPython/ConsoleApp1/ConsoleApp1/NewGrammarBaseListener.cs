//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from NewGrammar.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="INewGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class NewGrammarBaseListener : INewGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLines([NotNull] NewGrammarParser.LinesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.lines"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLines([NotNull] NewGrammarParser.LinesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] NewGrammarParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] NewGrammarParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.parCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParCommand([NotNull] NewGrammarParser.ParCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.parCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParCommand([NotNull] NewGrammarParser.ParCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.ifCommnad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfCommnad([NotNull] NewGrammarParser.IfCommnadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.ifCommnad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfCommnad([NotNull] NewGrammarParser.IfCommnadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.whileCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileCommand([NotNull] NewGrammarParser.WhileCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.whileCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileCommand([NotNull] NewGrammarParser.WhileCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.foreachCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachCommand([NotNull] NewGrammarParser.ForeachCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.foreachCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachCommand([NotNull] NewGrammarParser.ForeachCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.continueCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueCommand([NotNull] NewGrammarParser.ContinueCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.continueCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueCommand([NotNull] NewGrammarParser.ContinueCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.breakCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakCommand([NotNull] NewGrammarParser.BreakCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.breakCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakCommand([NotNull] NewGrammarParser.BreakCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.commentCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentCommand([NotNull] NewGrammarParser.CommentCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.commentCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentCommand([NotNull] NewGrammarParser.CommentCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryCreate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQueryCreate([NotNull] NewGrammarParser.ExeCommandQueryCreateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryCreate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQueryCreate([NotNull] NewGrammarParser.ExeCommandQueryCreateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryRelate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQueryRelate([NotNull] NewGrammarParser.ExeCommandQueryRelateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryRelate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQueryRelate([NotNull] NewGrammarParser.ExeCommandQueryRelateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQuerySelect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQuerySelect([NotNull] NewGrammarParser.ExeCommandQuerySelectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQuerySelect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQuerySelect([NotNull] NewGrammarParser.ExeCommandQuerySelectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQuerySelectRelatedBy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQuerySelectRelatedBy([NotNull] NewGrammarParser.ExeCommandQuerySelectRelatedByContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQuerySelectRelatedBy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQuerySelectRelatedBy([NotNull] NewGrammarParser.ExeCommandQuerySelectRelatedByContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryDelete"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQueryDelete([NotNull] NewGrammarParser.ExeCommandQueryDeleteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryDelete"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQueryDelete([NotNull] NewGrammarParser.ExeCommandQueryDeleteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryUnrelate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandQueryUnrelate([NotNull] NewGrammarParser.ExeCommandQueryUnrelateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandQueryUnrelate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandQueryUnrelate([NotNull] NewGrammarParser.ExeCommandQueryUnrelateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandAssignment([NotNull] NewGrammarParser.ExeCommandAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandAssignment([NotNull] NewGrammarParser.ExeCommandAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandCall([NotNull] NewGrammarParser.ExeCommandCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandCall([NotNull] NewGrammarParser.ExeCommandCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandCreateList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandCreateList([NotNull] NewGrammarParser.ExeCommandCreateListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandCreateList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandCreateList([NotNull] NewGrammarParser.ExeCommandCreateListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandAddingToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandAddingToList([NotNull] NewGrammarParser.ExeCommandAddingToListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandAddingToList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandAddingToList([NotNull] NewGrammarParser.ExeCommandAddingToListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandWrite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandWrite([NotNull] NewGrammarParser.ExeCommandWriteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandWrite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandWrite([NotNull] NewGrammarParser.ExeCommandWriteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.exeCommandRead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExeCommandRead([NotNull] NewGrammarParser.ExeCommandReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.exeCommandRead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExeCommandRead([NotNull] NewGrammarParser.ExeCommandReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] NewGrammarParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] NewGrammarParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.instanceHandle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceHandle([NotNull] NewGrammarParser.InstanceHandleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.instanceHandle"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceHandle([NotNull] NewGrammarParser.InstanceHandleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.instanceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceName([NotNull] NewGrammarParser.InstanceNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.instanceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceName([NotNull] NewGrammarParser.InstanceNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.keyLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyLetter([NotNull] NewGrammarParser.KeyLetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.keyLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyLetter([NotNull] NewGrammarParser.KeyLetterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.whereExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereExpression([NotNull] NewGrammarParser.WhereExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.whereExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereExpression([NotNull] NewGrammarParser.WhereExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] NewGrammarParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] NewGrammarParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassName([NotNull] NewGrammarParser.ClassNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassName([NotNull] NewGrammarParser.ClassNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableName([NotNull] NewGrammarParser.VariableNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableName([NotNull] NewGrammarParser.VariableNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodName([NotNull] NewGrammarParser.MethodNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodName([NotNull] NewGrammarParser.MethodNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] NewGrammarParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] NewGrammarParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] NewGrammarParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] NewGrammarParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.relationshipLink"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationshipLink([NotNull] NewGrammarParser.RelationshipLinkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.relationshipLink"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationshipLink([NotNull] NewGrammarParser.RelationshipLinkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NewGrammarParser.relationshipSpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationshipSpecification([NotNull] NewGrammarParser.RelationshipSpecificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NewGrammarParser.relationshipSpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationshipSpecification([NotNull] NewGrammarParser.RelationshipSpecificationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
